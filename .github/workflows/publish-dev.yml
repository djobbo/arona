name: Publish dev
on:
  workflow_dispatch:
    inputs:
      package:
        description: 'Package to publish (optional)'
        required: false
        type: string
  push:
    branches:
      - master
    paths:
      - 'packages/**'
      - 'scripts/**'
      - 'package.json'
      - 'bun.lockb'

# Prevent multiple workflows from running at the same time
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  validate:
    name: Validate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Install dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-
      - name: Install dependencies
        run: bun install --frozen-lockfile
      - name: Check types
        run: bun run check:types:all
      - name: Check lint
        run: bun run check:lint:all

  publish:
    name: Publish
    needs: validate
    runs-on: ubuntu-latest
    if: github.repository_owner == 'djobbo'
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: '@arona/core'
            folder: packages/core
          - name: '@arona/discord'
            folder: packages/discord
          - name: create-arona
            folder: packages/create-arona
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-
      
      - name: Install dependencies
        run: bun install --frozen-lockfile
      
      - name: Setup npm authentication
        run: |
          echo "//registry.npmjs.org/:_authToken=$NPM_PUBLISH_TOKEN" > ~/.npmrc
          echo "registry=https://registry.npmjs.org/" >> ~/.npmrc
          echo "always-auth=true" >> ~/.npmrc
        env:
          NPM_PUBLISH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
      
      - name: Publish to npm
        run: |
          if [ -n "${{ github.event.inputs.package }}" ]; then
            if [ "${{ github.event.inputs.package }}" = "${{ matrix.name }}" ]; then
              bun run ./scripts/publish-dev.ts ${{ matrix.name }} ${{ matrix.folder }}
            else
              echo "Skipping ${{ matrix.name }} as it doesn't match the specified package"
            fi
          else
            bun run ./scripts/publish-dev.ts ${{ matrix.name }} ${{ matrix.folder }}
          fi
        env:
          NPM_PUBLISH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
          DEBUG: ${{ github.event_name == 'workflow_dispatch' && 'true' || '' }}
      
      - name: Handle failure
        if: failure()
        run: |
          echo "::error::Failed to publish ${{ matrix.name }}"
          exit 1
