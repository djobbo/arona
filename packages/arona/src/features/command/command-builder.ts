// This file is generated by `src/features/command/morph/command-builder.ts`. Do not edit it manually.

import {
  ApplicationCommandOptionType,
  SlashCommandBuilder as DJSSlashCommandBuilder,
  SlashCommandAttachmentOption,
  SlashCommandBooleanOption,
  SlashCommandChannelOption,
  SlashCommandIntegerOption,
  SlashCommandMentionableOption,
  SlashCommandNumberOption,
  SlashCommandRoleOption,
  SlashCommandStringOption,
  SlashCommandUserOption,
} from "discord.js"
import type { ChatInputCommandInteraction } from "discord.js"

export class SlashCommandBuilder<Params = {}> extends DJSSlashCommandBuilder {
  params: { name: string; type: ApplicationCommandOptionType }[] = []

  addTypedStringOption<Name extends string>(
    name: Name,
    ...[options, ...args]: Parameters<DJSSlashCommandBuilder["addStringOption"]>
  ): SlashCommandBuilder<
    Params & {
      [K in Name]: ReturnType<
        ChatInputCommandInteraction["options"]["getString"]
      >
    }
  > {
    const typeSafeOptions =
      options instanceof SlashCommandStringOption
        ? options.setName(name)
        : options(new SlashCommandStringOption()).setName(name)

    super.addStringOption(typeSafeOptions, ...args)
    this.params.push({ name, type: ApplicationCommandOptionType.String })
    return this
  }

  /** @depreacted Use `addTypedStringOption` instead */
  addStringOption(
    ...args: Parameters<DJSSlashCommandBuilder["addStringOption"]>
  ) {
    super.addStringOption(...args)
    return this
  }

  addTypedIntegerOption<Name extends string>(
    name: Name,
    ...[options, ...args]: Parameters<
      DJSSlashCommandBuilder["addIntegerOption"]
    >
  ): SlashCommandBuilder<
    Params & {
      [K in Name]: ReturnType<
        ChatInputCommandInteraction["options"]["getInteger"]
      >
    }
  > {
    const typeSafeOptions =
      options instanceof SlashCommandIntegerOption
        ? options.setName(name)
        : options(new SlashCommandIntegerOption()).setName(name)

    super.addIntegerOption(typeSafeOptions, ...args)
    this.params.push({ name, type: ApplicationCommandOptionType.Integer })
    return this
  }

  /** @depreacted Use `addTypedIntegerOption` instead */
  addIntegerOption(
    ...args: Parameters<DJSSlashCommandBuilder["addIntegerOption"]>
  ) {
    super.addIntegerOption(...args)
    return this
  }

  addTypedBooleanOption<Name extends string>(
    name: Name,
    ...[options, ...args]: Parameters<
      DJSSlashCommandBuilder["addBooleanOption"]
    >
  ): SlashCommandBuilder<
    Params & {
      [K in Name]: ReturnType<
        ChatInputCommandInteraction["options"]["getBoolean"]
      >
    }
  > {
    const typeSafeOptions =
      options instanceof SlashCommandBooleanOption
        ? options.setName(name)
        : options(new SlashCommandBooleanOption()).setName(name)

    super.addBooleanOption(typeSafeOptions, ...args)
    this.params.push({ name, type: ApplicationCommandOptionType.Boolean })
    return this
  }

  /** @depreacted Use `addTypedBooleanOption` instead */
  addBooleanOption(
    ...args: Parameters<DJSSlashCommandBuilder["addBooleanOption"]>
  ) {
    super.addBooleanOption(...args)
    return this
  }

  addTypedUserOption<Name extends string>(
    name: Name,
    ...[options, ...args]: Parameters<DJSSlashCommandBuilder["addUserOption"]>
  ): SlashCommandBuilder<
    Params & {
      [K in Name]: ReturnType<ChatInputCommandInteraction["options"]["getUser"]>
    }
  > {
    const typeSafeOptions =
      options instanceof SlashCommandUserOption
        ? options.setName(name)
        : options(new SlashCommandUserOption()).setName(name)

    super.addUserOption(typeSafeOptions, ...args)
    this.params.push({ name, type: ApplicationCommandOptionType.User })
    return this
  }

  /** @depreacted Use `addTypedUserOption` instead */
  addUserOption(...args: Parameters<DJSSlashCommandBuilder["addUserOption"]>) {
    super.addUserOption(...args)
    return this
  }

  addTypedChannelOption<Name extends string>(
    name: Name,
    ...[options, ...args]: Parameters<
      DJSSlashCommandBuilder["addChannelOption"]
    >
  ): SlashCommandBuilder<
    Params & {
      [K in Name]: ReturnType<
        ChatInputCommandInteraction["options"]["getChannel"]
      >
    }
  > {
    const typeSafeOptions =
      options instanceof SlashCommandChannelOption
        ? options.setName(name)
        : options(new SlashCommandChannelOption()).setName(name)

    super.addChannelOption(typeSafeOptions, ...args)
    this.params.push({ name, type: ApplicationCommandOptionType.Channel })
    return this
  }

  /** @depreacted Use `addTypedChannelOption` instead */
  addChannelOption(
    ...args: Parameters<DJSSlashCommandBuilder["addChannelOption"]>
  ) {
    super.addChannelOption(...args)
    return this
  }

  addTypedRoleOption<Name extends string>(
    name: Name,
    ...[options, ...args]: Parameters<DJSSlashCommandBuilder["addRoleOption"]>
  ): SlashCommandBuilder<
    Params & {
      [K in Name]: ReturnType<ChatInputCommandInteraction["options"]["getRole"]>
    }
  > {
    const typeSafeOptions =
      options instanceof SlashCommandRoleOption
        ? options.setName(name)
        : options(new SlashCommandRoleOption()).setName(name)

    super.addRoleOption(typeSafeOptions, ...args)
    this.params.push({ name, type: ApplicationCommandOptionType.Role })
    return this
  }

  /** @depreacted Use `addTypedRoleOption` instead */
  addRoleOption(...args: Parameters<DJSSlashCommandBuilder["addRoleOption"]>) {
    super.addRoleOption(...args)
    return this
  }

  addTypedMentionableOption<Name extends string>(
    name: Name,
    ...[options, ...args]: Parameters<
      DJSSlashCommandBuilder["addMentionableOption"]
    >
  ): SlashCommandBuilder<
    Params & {
      [K in Name]: ReturnType<
        ChatInputCommandInteraction["options"]["getMentionable"]
      >
    }
  > {
    const typeSafeOptions =
      options instanceof SlashCommandMentionableOption
        ? options.setName(name)
        : options(new SlashCommandMentionableOption()).setName(name)

    super.addMentionableOption(typeSafeOptions, ...args)
    this.params.push({ name, type: ApplicationCommandOptionType.Mentionable })
    return this
  }

  /** @depreacted Use `addTypedMentionableOption` instead */
  addMentionableOption(
    ...args: Parameters<DJSSlashCommandBuilder["addMentionableOption"]>
  ) {
    super.addMentionableOption(...args)
    return this
  }

  addTypedNumberOption<Name extends string>(
    name: Name,
    ...[options, ...args]: Parameters<DJSSlashCommandBuilder["addNumberOption"]>
  ): SlashCommandBuilder<
    Params & {
      [K in Name]: ReturnType<
        ChatInputCommandInteraction["options"]["getNumber"]
      >
    }
  > {
    const typeSafeOptions =
      options instanceof SlashCommandNumberOption
        ? options.setName(name)
        : options(new SlashCommandNumberOption()).setName(name)

    super.addNumberOption(typeSafeOptions, ...args)
    this.params.push({ name, type: ApplicationCommandOptionType.Number })
    return this
  }

  /** @depreacted Use `addTypedNumberOption` instead */
  addNumberOption(
    ...args: Parameters<DJSSlashCommandBuilder["addNumberOption"]>
  ) {
    super.addNumberOption(...args)
    return this
  }

  addTypedAttachmentOption<Name extends string>(
    name: Name,
    ...[options, ...args]: Parameters<
      DJSSlashCommandBuilder["addAttachmentOption"]
    >
  ): SlashCommandBuilder<
    Params & {
      [K in Name]: ReturnType<
        ChatInputCommandInteraction["options"]["getAttachment"]
      >
    }
  > {
    const typeSafeOptions =
      options instanceof SlashCommandAttachmentOption
        ? options.setName(name)
        : options(new SlashCommandAttachmentOption()).setName(name)

    super.addAttachmentOption(typeSafeOptions, ...args)
    this.params.push({ name, type: ApplicationCommandOptionType.Attachment })
    return this
  }

  /** @depreacted Use `addTypedAttachmentOption` instead */
  addAttachmentOption(
    ...args: Parameters<DJSSlashCommandBuilder["addAttachmentOption"]>
  ) {
    super.addAttachmentOption(...args)
    return this
  }
}
